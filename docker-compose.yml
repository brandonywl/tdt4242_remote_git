version: '3'

services:
  backend:
    container_name: django_group_${GROUPID}
    build:
      context: backend/secfit/
      dockerfile: Dockerfile
      args:
        DJANGO_SUPERUSER_USERNAME: "${DJANGO_SUPERUSER_USERNAME}"
        DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD}"
        DJANGO_SUPERUSER_EMAIL: "${DJANGO_SUPERUSER_EMAIL}"
    volumes:
      - static_volume:/usr/src/static
      - media_volume:/usr/src/media
      - ./backend/secfit:/code/secfit
    environment: 
      - GROUPID=${GROUPID}
      - USE_S3="${USE_S3}"
      - AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
      - AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
      - AWS_STORAGE_BUCKET_NAME="${AWS_STORAGE_BUCKET_NAME}"
    networks:
      backend_bridge:
        ipv4_address: 10.${GROUPID}.0.4

  application:
    container_name: node_group_${GROUPID}
    build:
      context: frontend/
      dockerfile: Dockerfile
      args:
        GROUPID: ${GROUPID}
        DOMAIN: ${DOMAIN}
        URL_PREFIX: ${URL_PREFIX}
        PORT_PREFIX: ${PORT_PREFIX}
    volumes:
      - ./frontend/www:/app/www
    networks:
      backend_bridge:
        ipv4_address: 10.${GROUPID}.0.5

  web:
    container_name: nginx_group_${GROUPID}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${PORT_PREFIX}${GROUPID}:80
    environment: 
      - GROUPID=${GROUPID}
      - PORT_PREFIX=${PORT_PREFIX}
    networks:
      backend_bridge:
        ipv4_address: 10.${GROUPID}.0.6

networks:  
  backend_bridge:
    driver: bridge
    ipam:
        config:
          - subnet: 10.${GROUPID}.0.0/18

volumes:
    static_volume:
    media_volume:
